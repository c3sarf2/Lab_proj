// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType_PD;
//
//    var personalDetails = PersonalDetails.FromJson(jsonString);

namespace QuickType_PD
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class OrcidPersonalDetails
    {
        [JsonProperty("last-modified-date")]
        public EdDate LastModifiedDate { get; set; }

        [JsonProperty("name")]
        public Name Name { get; set; }

        [JsonProperty("other-names")]
        public OtherNames OtherNames { get; set; }

        [JsonProperty("biography")]
        public Biography Biography { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }
    }

    public partial class Biography
    {
        [JsonProperty("created-date")]
        public EdDate CreatedDate { get; set; }

        [JsonProperty("last-modified-date")]
        public EdDate LastModifiedDate { get; set; }

        [JsonProperty("content")]
        public string Content { get; set; }

        [JsonProperty("visibility")]
        public string Visibility { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }
    }

    public partial class EdDate
    {
        [JsonProperty("value")]
        public long Value { get; set; }
    }

    public partial class Name
    {
        [JsonProperty("created-date")]
        public EdDate CreatedDate { get; set; }

        [JsonProperty("last-modified-date")]
        public EdDate LastModifiedDate { get; set; }

        [JsonProperty("given-names")]
        public CreditName GivenNames { get; set; }

        [JsonProperty("family-name")]
        public CreditName FamilyName { get; set; }

        [JsonProperty("credit-name")]
        public CreditName CreditName { get; set; }

        [JsonProperty("source")]
        public object Source { get; set; }

        [JsonProperty("visibility")]
        public string Visibility { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }
    }

    public partial class CreditName
    {
        [JsonProperty("value")]
        public string Value { get; set; }
    }

    public partial class OtherNames
    {
        [JsonProperty("last-modified-date")]
        public object LastModifiedDate { get; set; }

        [JsonProperty("other-name")]
        public List<object> OtherName { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }
    }

    public partial class OrcidPersonalDetails
    {
        public static OrcidPersonalDetails FromJson(string json) => JsonConvert.DeserializeObject<OrcidPersonalDetails>(json, QuickType_PD.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this OrcidPersonalDetails self) => JsonConvert.SerializeObject(self, QuickType_PD.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
